

service: apidynamodb # NOTE: update this with your service name


provider:
  name: aws
  runtime: nodejs8.10
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"     


functions:
  create:
     handler: api/create.create
     events: 
       - http: 
             path: users
             method: POST
             cors: true
  delete:
     handler: api/delete.delete
     events: 
       - http: 
             path: users/{id}
             method: DELETE
             cors: true
  update:
     handler: api/update.update
     events: 
       - http: 
             path: users/{id}
             method: PUT
             cors: true
  getall:
     handler: api/getall.getall
     events: 
       - http: 
             path: users
             method: GET
             cors: true
  get:
     handler: api/get.get
     events: 
       - http: 
             path: users/{id}
             method: GET
             cors: true
  
   
    

resources:
  Resources:
    UserDynamoDBTable:
      Type: "AWS::DynamoDB::Table"
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:   # Make your throughput according to the usecase, this is just for test
          ReadCapacityUnits: 1   
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}